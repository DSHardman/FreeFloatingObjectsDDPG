%global cameraParams worldcentre imagecentre

% Adapted for water tracking 25/11/20
% Auto-generated by cameraCalibrator app on 25-Nov-2020
%-------------------------------------------------------

squareSize = 30;  % in units of 'millimeters'

% Define images to process
cd 'CalibrationImages';
imageFileNames = ls; %use all images in this folder
stringNames = string(zeros(size(imageFileNames,1)-2, 1));
for i = 3:size(imageFileNames,1)
    stringNames(i-2) = string(imageFileNames(i,:));
end

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(stringNames);
stringNames = stringNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(stringNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, ~, ~] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

cd ..;

hTakePhoto = @()TakePhoto(cam,cameraParams);
I = TakePhoto(cam, cameraParams);
[worldcentre, imagecentre] = SetCentre(I, cameraParams);

clear squareSize imageFileNames stringNames imagePoints boardSize ...
    imagesUsed originalImage mrows ncols worldPoints I
